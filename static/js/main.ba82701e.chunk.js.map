{"version":3,"sources":["components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","to","isActive","classNames","HomePage","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","id","findParent","array","parentName","find","parent","map","born","died","fatherName","motherName","mother","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","loadPeople","peopleFromServer","useEffect","length","ErrorPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ba82701e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"people\"\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\n\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n  id: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, id }) => {\n  const findParent = (\n    array: Person[], parentName: string | null,\n  ): Person | null => {\n    return array.find(parent => parent.name === parentName) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          const mother = findParent(people, motherName);\n          const father = findParent(people, fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === id,\n              })}\n              key={slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink person={mother} />\n                  )\n                  : motherName || ('-')}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <PersonLink person={father} />\n                  )\n                  : fatherName || ('-')}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length === 0 && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <PeopleTable people={people} id={slug} />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { NavBar } from './components/NavBar/NavBar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage/ErrorPage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}